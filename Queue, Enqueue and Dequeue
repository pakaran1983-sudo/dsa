#include <stdio.h>
#define MAX 5

int queue[MAX];
int front = -1;
int rear = -1;

void enqueue(int k) {
    if (rear == MAX - 1) {
        printf("\nQueue overflow\n");
    } else if (front == -1 && rear == -1) {
        front = rear = 0;
        queue[rear] = k;
    } else {
        rear++;
        queue[rear] = k;
    }
}

void dequeue() {
    if (front == -1 || front > rear) {
        printf("\nQueue underflow\n");
    } else {
        printf("\nDeleted element: %d\n", queue[front]);
        front++;
        if (front > rear) {  // Reset when queue becomes empty
            front = rear = -1;
        }
    }
}

void display() {
    if (front == -1) {
        printf("\nQueue is empty\n");
    } else {
        printf("\nQueue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main() {
    int choice, value;

    while (1) {
        printf("\n--- Queue Menu ---");
        printf("\n1. Enqueue");
        printf("\n2. Dequeue");
        printf("\n3. Display");
        printf("\n4. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice! Try again.\n");
        }
    }
}

#include <stdio.h>

struct Term {
    int coeff;   // coefficient
    int expo;    // exponent
};

int main() {
    struct Term poly1[20], poly2[20], polyResult[40];
    int n1, n2, n3;
    int i, j, k;
    int choice;

    while (1) {
        printf("\n=== Polynomial Addition Menu ===\n");
        printf("1. Enter first polynomial\n");
        printf("2. Enter second polynomial\n");
        printf("3. Display polynomials\n");
        printf("4. Add polynomials\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter number of terms in first polynomial: ");
            scanf("%d", &n1);
            printf("Enter terms in descending order of exponents (coeff exponent):\n");
            for (i = 0; i < n1; i++) {
                scanf("%d %d", &poly1[i].coeff, &poly1[i].expo);
            }
            break;

        case 2:
            printf("Enter number of terms in second polynomial: ");
            scanf("%d", &n2);
            printf("Enter terms in descending order of exponents (coeff exponent):\n");
            for (i = 0; i < n2; i++) {
                scanf("%d %d", &poly2[i].coeff, &poly2[i].expo);
            }
            break;

        case 3:
            printf("Polynomial 1: ");
            for (i = 0; i < n1; i++) {
                printf("%dx^%d", poly1[i].coeff, poly1[i].expo);
                if (i != n1 - 1) printf(" + ");
            }
            printf("\n");

            printf("Polynomial 2: ");
            for (i = 0; i < n2; i++) {
                printf("%dx^%d", poly2[i].coeff, poly2[i].expo);
                if (i != n2 - 1) printf(" + ");
            }
            printf("\n");
            break;

        case 4:
            i = j = k = 0;
            n3 = 0;

            // Add while both have terms left
            while (i < n1 && j < n2) {
                if (poly1[i].expo == poly2[j].expo) {
                    polyResult[k].coeff = poly1[i].coeff + poly2[j].coeff;
                    polyResult[k].expo = poly1[i].expo;
                    i++; j++; k++;
                } else if (poly1[i].expo > poly2[j].expo) {
                    polyResult[k] = poly1[i];
                    i++; k++;
                } else {
                    polyResult[k] = poly2[j];
                    j++; k++;
                }
            }

            // Copy remaining terms of poly1
            while (i < n1) {
                polyResult[k] = poly1[i];
                i++; k++;
            }

            // Copy remaining terms of poly2
            while (j < n2) {
                polyResult[k] = poly2[j];
                j++; k++;
            }

            n3 = k;

            printf("Resultant Polynomial: ");
            for (i = 0; i < n3; i++) {
                printf("%dx^%d", polyResult[i].coeff, polyResult[i].expo);
                if (i != n3 - 1) printf(" + ");
            }
            printf("\n");
            break;

        case 5:
            printf("Exiting...\n");
            return 0;

        default:
            printf("Invalid choice! Try again.\n");
        }
    }
}

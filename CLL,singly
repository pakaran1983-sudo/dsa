#include <stdio.h>
#include <stdlib.h>

// Node structure
struct Node {
    int data;
    struct Node* next;
};

struct Node *front = NULL, *rear = NULL;

// Enqueue function
void enqueue(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = NULL;

    if (front == NULL) {
        front = rear = newNode;
        rear->next = front; // Circular link
    } else {
        rear->next = newNode;
        rear = newNode;
        rear->next = front; // Keep it circular
    }
    printf("\n✅ Inserted %d\n", value);
}

// Dequeue function
void dequeue() {
    if (front == NULL) {
        printf("\n Queue is Empty\n");
        return;
    }

    if (front == rear) { // Only one node
        printf("\n Deleted %d\n", front->data);
        free(front);
        front = rear = NULL;
    } else {
        struct Node* temp = front;
        printf("\n🗑️ Deleted %d\n", temp->data);
        front = front->next;
        rear->next = front;
        free(temp);
    }
}

// Display function
void display() {
    if (front == NULL) {
        printf("\n⚠️ Queue is Empty\n");
        return;
    }

    struct Node* temp = front;
    printf("\n📌 Queue Elements: ");
    do {
        printf("%d ", temp->data);
        temp = temp->next;
    } while (temp != front);
    printf("\n");
}

// Main function (Menu-driven)
int main() {
    int choice, value;
    printf("\n===== CIRCULAR QUEUE USING LINKED LIST =====\n");
    while (1) {
        printf("\n---- MENU ----\n");
        printf("1. Enqueue (Insert)\n");
        printf("2. Dequeue (Delete)\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &value);
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("\n Exiting program. Goodbye!\n");
                exit(0);
            default:
                printf("\n Invalid choice! Please try again.\n");
        }
    }
    return 0;
}
